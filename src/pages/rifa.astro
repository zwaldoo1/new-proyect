---
import BaseLayout from '../layouts/BaseLayout.astro';
import Footer from '../components/Footer.astro';
const TOTAL_NUMEROS = 10000;
const PAGE_SIZE = 100;
---

<BaseLayout>
  <main class="bg-animated min-h-screen p-4 text-white flex flex-col items-center">
    <h1 class="text-4xl font-bold mb-6">Elige tu número de la rifa</h1>
    <p class="mb-4 max-w-xl text-center">
      Haz clic en un número para comprarlo. Los números ya comprados aparecerán en rojo y deshabilitados.
    </p>

    <div 
      id="rifa-grid" 
      class="grid grid-cols-10 gap-1 max-h-[500px] overflow-y-auto bg-white p-2 rounded shadow text-xs text-center text-black w-full max-w-4xl"
    >
      <!-- Aquí se insertarán los botones con JS -->
    </div>

    <button id="load-more" class="mt-4 px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700">
      Mostrar más números
    </button>
  </main>

  <script type="module" is:inline>
    const TOTAL_NUMEROS = ${TOTAL_NUMEROS};
    const PAGE_SIZE = ${PAGE_SIZE};
    const reservedNumbers = new Set();
    let currentMax = PAGE_SIZE;

    document.addEventListener('DOMContentLoaded', () => {
      const grid = document.getElementById('rifa-grid');
      const loadMoreBtn = document.getElementById('load-more');

      // Mostrar texto mientras carga los datos
      grid.textContent = 'Cargando números...';

      function renderButtons() {
        grid.textContent = ''; // Limpiar mensaje de carga
        for (let i = 1; i <= currentMax && i <= TOTAL_NUMEROS; i++) {
          const btn = document.createElement('button');
          btn.textContent = i;
          btn.className = reservedNumbers.has(i.toString()) 
            ? 'py-1 rounded bg-red-500 cursor-not-allowed' 
            : 'py-1 rounded bg-green-500 hover:bg-green-700';
          btn.disabled = reservedNumbers.has(i.toString());
          btn.addEventListener('click', () => handleSelect(i));
          grid.appendChild(btn);
        }

        if (currentMax >= TOTAL_NUMEROS) {
          loadMoreBtn.style.display = 'none';
        } else {
          loadMoreBtn.style.display = 'block';
        }
      }

      async function fetchReserved() {
        try {
          const res = await fetch('/api/numeros-reservados');
          if (!res.ok) {
            console.error('Error al obtener números reservados:', res.statusText);
            grid.textContent = 'Error al cargar números.';
            return;
          }
          const data = await res.json();
          data.forEach(num => reservedNumbers.add(num.toString()));
        } catch (error) {
          console.error('Error en fetchReserved:', error);
          grid.textContent = 'Error al cargar números.';
        }
      }

      async function handleSelect(num) {
        if (reservedNumbers.has(num.toString())) return;

        const confirmed = confirm(`¿Quieres comprar el número ${num}?`);
        if (!confirmed) return;

        try {
          const res = await fetch('/api/iniciar-pago', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ numero: num }),
          });
          const data = await res.json();

          if (!res.ok) {
            alert('No se pudo iniciar el pago: ' + (data.error || 'Error desconocido'));
            return;
          }

          reservedNumbers.add(num.toString());
          renderButtons();

          window.location.href = data.init_point;
        } catch (error) {
          alert('Error al iniciar el pago: ' + error.message);
        }
      }

      loadMoreBtn.addEventListener('click', () => {
        currentMax += PAGE_SIZE;
        if (currentMax > TOTAL_NUMEROS) currentMax = TOTAL_NUMEROS;
        renderButtons();
      });

      fetchReserved().then(() => renderButtons());
    });
  </script>

  <Footer />
</BaseLayout>
